<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<groupId>@GROUPID@</groupId>
	<artifactId>@PACKAGE@</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modelVersion>4.0.0</modelVersion>

	<name>Aggregate POM for @PACKAGE@</name>
	<description>Main @PACKAGE@ packaging and installation pom</description>

  <properties>
    <database.baseurl>jdbc:sqlserver://${database.server};databaseName=${database.name};</database.baseurl>
    <liquibase.logLevel>info</liquibase.logLevel>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sql-maven-plugin</artifactId>
          <version>1.5</version>
          <configuration>
            <driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</driver>
            <url>${database.baseurl}</url>
            <username>${database.username}</username>
            <password>${database.password}</password>
            <autocommit>true</autocommit>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.microsoft.sqlserver</groupId>
              <artifactId>sqljdbc4</artifactId>
              <version>4.1</version>
              <scope>system</scope>
              <systemPath>${project.basedir}/../../sqljdbc41.jar</systemPath>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>StartDeploy</id>
              <phase>process-resources</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <sqlCommand>
                  IF OBJECT_ID('dbo.DATABASEDEPLOYLOG') IS NULL
                  CREATE TABLE dbo.DATABASEDEPLOYLOG (
                  [Deploy.StartedAt] DATETIME2(0) NOT NULL
                  , [Deploy.Action] VARCHAR(100)
                  , [Deploy.ActionOccuredOn] DATETIME2 NOT NULL CONSTRAINT [Def_Deploy.ActionOccuredOn] DEFAULT (SYSDATETIME())
                  , [Deploy.TriggeredFromPath] VARCHAR(4000)
                  , [Deploy.TriggeredOnHostName] VARCHAR(100)
                  , [Package.Version] VARCHAR(500)
                  , [Package.BuildDate] DATETIME2(0)
                  , [Package.Binary] VARBINARY(max)
                  , [Database.Server] VARCHAR(500)
                  , [Database.Name] VARCHAR(100)
                  , [Database.Username] VARCHAR(100)
                  , [Database.Version] VARCHAR(max)
                  );

                  IF '${project.version}' &lt;&gt; '1.0.0-snapshot'
                      IF EXISTS (
                       SELECT 1
                       FROM dbo.DATABASEDEPLOYLOG
                       WHERE [Package.Version] NOT LIKE '%.[0-9][0-9][0-9]'
                       AND [Package.Version] NOT LIKE '%.[0-9][0-9]'
                       AND CONVERT(int, SUBSTRING(REPLACE('${project.version}', 'dev-unstable-', ''), 1, CHARINDEX('.', REPLACE('${project.version}', 'dev-unstable-', '')) - 1))
                         &lt; CONVERT(int, SUBSTRING(REPLACE([Package.Version], 'dev-unstable-', ''), 1, CHARINDEX('.', REPLACE([Package.Version], 'dev-unstable-', '')) - 1))
                      ) RAISERROR ('The version of this package is lower than the one already installed.', 18, 1)

                  INSERT INTO dbo.DATABASEDEPLOYLOG
                  ( [Deploy.StartedAt] ,
                  [Deploy.Action] ,
                  [Deploy.TriggeredFromPath] ,
                  [Deploy.TriggeredOnHostName] ,
                  [Package.Version] ,
                  --[Package.BuildDate] ,
                  --[Package.Binary] ,
                  [Database.Server] ,
                  [Database.Name] ,
                  [Database.Username] ,
                  [Database.Version]
                  )
                  VALUES  ( '${maven.build.timestamp}' ,
                  'Started' ,
                  '${project.basedir}' ,
                  '${hostname}' ,
                  '${project.version}' ,
                  '${database.server}' ,
                  '${database.name}' ,
                  '${database.username}' ,
                  @@VERSION
                  );
                </sqlCommand>
                <printResultSet>true</printResultSet>
                <autocommit>true</autocommit>
                <onError>abort</onError>
              </configuration>
            </execution>

            <execution>
              <id>CompleteDeploy</id>
              <phase>test</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <sqlCommand>
                  INSERT INTO dbo.DATABASEDEPLOYLOG
                  ( [Deploy.StartedAt] ,
                  [Deploy.Action] ,
                  [Deploy.TriggeredFromPath] ,
                  [Deploy.TriggeredOnHostName] ,
                  [Package.Version] ,
                  [Database.Server] ,
                  [Database.Name] ,
                  [Database.Username] ,
                  [Database.Version]
                  )
                  VALUES  ( '${maven.build.timestamp}' ,
                  'Completed' ,
                  '${project.basedir}' ,
                  '${hostname}' ,
                  '${project.version}' ,
                  '${database.server}' ,
                  '${database.name}' ,
                  '${database.username}' ,
                  @@VERSION
                  )
                </sqlCommand>
                <printResultSet>true</printResultSet>
                <autocommit>true</autocommit>
                <onError>abort</onError>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <descriptors>
              <descriptor>${project.basedir}/assembly.xml</descriptor>
            </descriptors>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>none</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          <version>3.4.1</version>
          <configuration>
            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
            <changeLogFile>${project.basedir}/update.xml</changeLogFile>
            <driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</driver>
            <url>${database.baseurl}</url>
            <username>${database.username}</username>
            <password>${database.password}</password>
            <liquibaseShouldRun>true</liquibaseShouldRun>
            <logLevel>${liquibase.logLevel}</logLevel>
          </configuration>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>update</goal>
              </goals>
            </execution>
          </executions>

          <dependencies>
            <dependency>
              <groupId>com.microsoft.sqlserver</groupId>
              <artifactId>sqljdbc4</artifactId>
              <version>4.1</version>
              <scope>system</scope>
              <systemPath>${project.basedir}/../../sqljdbc41.jar</systemPath>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforce-property</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireProperty>
                    <property>database.server</property>
                    <message>You must set the database.server property!</message>
                  </requireProperty>
                  <requireProperty>
                    <property>database.username</property>
                    <message>You must set the database.username property!</message>
                  </requireProperty>
                  <requireProperty>
                    <property>database.password</property>
                    <message>You must set the database.password property!</message>
                  </requireProperty>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>


        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
          <executions>
            <execution>
              <id>default-clean</id>
              <phase>none</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
          <executions>
            <execution>
              <id>default-deploy</id>
              <phase>none</phase>
              <goals>
                <goal>deploy</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <executions>
            <execution>
              <id>default-compile</id>
              <phase>none</phase>
            </execution>
            <execution>
              <id>default-testCompile</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>

        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12.4</version>
          <executions>
            <execution>
              <id>default-test</id>
              <phase>none</phase>
              <goals>
                <goal>deploy</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.4</version>
          <executions>
            <execution>
              <id>default-install</id>
              <phase>none</phase>
              <goals>
                <goal>install</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>default-resources</id>
              <phase>none</phase>
              <goals>
                <goal>resources</goal>
              </goals>
            </execution>
            <execution>
              <id>default-testResources</id>
              <phase>none</phase>
              <goals>
                <goal>testResources</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- This will disable the plugin, we do not use it for the deploy anyway -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
          <executions>
            <execution>
              <id>default-site</id>
              <phase>none</phase>
              <goals>
                <goal>site</goal>
              </goals>
            </execution>
            <execution>
              <id>default-deploy</id>
              <phase>none</phase>
              <goals>
                <goal>deploy</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Validate external properties, they must be set before executing mvn install -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <!-- Packages all of @PACKAGE@ into a big zip-file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

	<modules>
    @MODULES@
	</modules>

  <profiles>
    <profile>
      <id>nix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <hostname>${env.HOSTNAME}</hostname>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <hostname>${env.COMPUTERNAME}</hostname>
      </properties>
    </profile>
  </profiles>


</project>